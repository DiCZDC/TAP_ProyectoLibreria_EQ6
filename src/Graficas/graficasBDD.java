/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Graficas;

import Conector.Conexion;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.sql.*;
import java.util.*;
import java.util.logging.*;
import org.jfree.chart.*;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.*;

/**
 *
 * @author Zaidc
 */
public class graficasBDD extends javax.swing.JPanel {

    /**
     * Creates new form graficasBDD
     */
    Conexion con = new Conexion();
    Connection cn = con.conectar();
    HashMap<Long,Integer> hMapVal= new HashMap<Long,Integer>();
    HashMap<Long, String> hMapTit = new HashMap<Long,String>();
    
    
    public void fillData(String tabla,int keyPos){
        try { 
            PreparedStatement ps = cn.prepareStatement("SELECT * FROM "+tabla);
            
            ResultSet rs = ps.executeQuery();
            
            while(rs.next()){
                Long keyAct = rs.getLong(keyPos);
                if(hMapVal.containsKey(keyAct))
                    hMapVal.put(keyAct,hMapVal.get(keyAct)+1);
                else
                    hMapVal.put(keyAct, 1);
            }
        } catch (SQLException ex) {
            Logger.getLogger(graficasBDD.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void fillTit(String tabla,int keyPos,int titPos){
        try { 
            PreparedStatement ps = cn.prepareStatement("SELECT * FROM "+tabla);
            
            ResultSet rs = ps.executeQuery();
            
            while(rs.next())
                hMapTit.put(rs.getLong(keyPos), rs.getString(titPos));
            
            System.out.println(hMapTit);
        } catch (SQLException ex) {
            Logger.getLogger(graficasBDD.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    private void transGrafica(JFreeChart tipoGrafico){
        ChartPanel panel = new ChartPanel(tipoGrafico);
        panel.setMouseWheelEnabled(true);
        panel.setPreferredSize(new Dimension(800,400));
        panelGráfica.add(panel,BorderLayout.NORTH);
        
    }
    public void iniGraficaPastel(String Titulo){
        DefaultPieDataset datasetCreado = new DefaultPieDataset();
        for (Long i : hMapVal.keySet())
            if(hMapTit.isEmpty())
                datasetCreado.setValue(i, hMapVal.get(i));
            else
                datasetCreado.setValue(hMapTit.get(i), hMapVal.get(i));
        
        JFreeChart graficoPast = ChartFactory.createPieChart(Titulo,datasetCreado,true,true,false);
        transGrafica(graficoPast);
    }
    public void iniGraficaBarras(String Titulo){
        DefaultCategoryDataset datasetCreado =new DefaultCategoryDataset( ); 
        for (Long i : hMapVal.keySet())
            datasetCreado.addValue(hMapVal.get(i), hMapTit.get(i), "");
           
        JFreeChart barChart = ChartFactory.createBarChart(Titulo,"","",datasetCreado,PlotOrientation.VERTICAL,           
         true, true, false);
         
        transGrafica(barChart);
        
    }
    public graficasBDD() {
        initComponents();

    }
    public static void main(String[] args) {
        graficasBDD gb = new graficasBDD();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelGráfica = new javax.swing.JPanel();

        setPreferredSize(new java.awt.Dimension(450, 300));

        panelGráfica.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelGráfica, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelGráfica, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel panelGráfica;
    // End of variables declaration//GEN-END:variables
}
