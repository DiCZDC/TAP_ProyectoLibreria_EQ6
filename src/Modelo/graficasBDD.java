/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Modelo;

import Modelo.Conexion;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.sql.*;
import java.util.*;
import java.util.logging.*;
import javax.swing.JPanel;
import org.jfree.chart.*;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.*;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

/**
 *
 * @author Zaidc
 */
public class graficasBDD extends javax.swing.JPanel {

    /**
     * Creates new form graficasBDD
     */
    Conexion con = new Conexion();
    Connection cn = con.conectar();
    HashMap<Long,Integer> hMapVal= new HashMap<Long,Integer>();
    HashMap<Long, String> hMapTit = new HashMap<Long,String>();
    
            
    ChartPanel panel;
    
    
    public void fillData(String tabla,int keyPos){
        hMapVal.clear();
        hMapTit.clear();
        try { 
            PreparedStatement ps = cn.prepareStatement("SELECT * FROM "+tabla);
            
            ResultSet rs = ps.executeQuery();
            
            while(rs.next()){
                Long keyAct = rs.getLong(keyPos);
                if(hMapVal.containsKey(keyAct))
                    hMapVal.put(keyAct,hMapVal.get(keyAct)+1);
                else
                    hMapVal.put(keyAct, 1);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(graficasBDD.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void fillTit(String tabla,int keyPos,int titPos){
        hMapTit.clear();
        try { 
            PreparedStatement ps = cn.prepareStatement("SELECT * FROM "+tabla);
            
            ResultSet rs = ps.executeQuery();
            
            while(rs.next())
                hMapTit.put(rs.getLong(keyPos), rs.getString(titPos));
            
        } catch (SQLException ex) {
            Logger.getLogger(graficasBDD.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private boolean panelEmpty(){
        Component[] componentsPanel = this.getComponents();
        return componentsPanel.length == 0;
    }
    
    private void transGrafica(JFreeChart tipoGrafico){
        if(!panelEmpty())
            this.remove(panel);
        panel = new ChartPanel(tipoGrafico);
        
        panel.setPreferredSize(new Dimension(this.WIDTH,300));
        //System.out.println(this.HEIGHT);
        
        this.add(panel,BorderLayout.CENTER);
        panel.revalidate();
       
        
    }
    public void iniGraficaPastel(String Titulo){
        DefaultPieDataset datasetCreado = new DefaultPieDataset();
        for (Long i : hMapVal.keySet())
            if(hMapTit.isEmpty())
                datasetCreado.setValue(i, hMapVal.get(i));
            else
                datasetCreado.setValue(hMapTit.get(i), hMapVal.get(i));
            
        JFreeChart graficoPast = ChartFactory.createPieChart(Titulo,datasetCreado,true,true,false);
        transGrafica(graficoPast);
    }
    public void iniGraficaBarras(String Titulo){
        DefaultCategoryDataset datasetCreado =new DefaultCategoryDataset( ); 
        for (Long i : hMapVal.keySet())
            datasetCreado.addValue(hMapVal.get(i), hMapTit.get(i), "");
           
        JFreeChart barChart = ChartFactory.createBarChart(Titulo,"","",datasetCreado,PlotOrientation.VERTICAL,           
         true, true, false);
        
        transGrafica(barChart);
        
    }
    
    public graficasBDD() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setPreferredSize(new java.awt.Dimension(450, 300));
        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
